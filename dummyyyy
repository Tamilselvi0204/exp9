pip install opencv-python
pip install gTTS
sudo apt-get install espeak
import cv2
import time
import RPi.GPIO as GPIO
from gtts import gTTS
import os

# Ultrasonic Sensor Pins
TRIG = 23
ECHO = 24

# Setup GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)

# Function to get distance
def get_distance():
    GPIO.output(TRIG, False)
    time.sleep(0.1)

    GPIO.output(TRIG, True)
    time.sleep(0.00001)
    GPIO.output(TRIG, False)

    while GPIO.input(ECHO) == 0:
        pulse_start = time.time()

    while GPIO.input(ECHO) == 1:
        pulse_end = time.time()

    pulse_duration = pulse_end - pulse_start
    distance = pulse_duration * 17150  # cm
    distance = round(distance, 2)
    return distance

# Function to provide audio alert
def speak(text):
    tts = gTTS(text=text, lang='en')
    tts.save("alert.mp3")
    os.system("mpg123 alert.mp3")

# Load pre-trained object detection model (Haarcascade)
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Initialize Pi Camera
cap = cv2.VideoCapture(0)

try:
    while True:
        ret, frame = cap.read()
        if not ret:
            break

        # Object Detection
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        objects = face_cascade.detectMultiScale(gray, 1.3, 5)

        for (x, y, w, h) in objects:
            cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)
            speak("Person detected ahead.")

        # Obstacle Detection
        distance = get_distance()
        print(f"Distance: {distance} cm")

        if distance < 50:  # threshold
            speak("Obstacle detected at " + str(distance) + " centimeters")

        cv2.imshow('Smart Vision Glass', frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

except KeyboardInterrupt:
    print("Program stopped manually.")

finally:
    cap.release()
    cv2.destroyAllWindows()
    GPIO.cleanup()
